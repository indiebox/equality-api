name: Laravel

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  NODE_VERSION: "14.17.0"
  PHP_VERSION: "7.4.5"

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    services:
      mysql-service:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD }}
          MYSQL_DATABASE: db_test
        ports:
          - 33306:3306
        # Set health checks to wait until mysql database has started (it takes some seconds to start)
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    steps:
    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: ${{ env.PHP_VERSION }}

    - uses: actions/setup-node@v2.4.1
      with:
        node-version: ${{ env.NODE_VERSION }}
    - uses: mikeal/npx@1.0.0

    - uses: actions/checkout@v2

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env_testing', '.env');"

    - name: Install Dependencies
      run: |
        composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
        npm install
    - name: Generate key
      run: php artisan key:generate

    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Build Frontend
      run: npx mix --production

    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        APP_URL:
        DB_CONNECTION: mysql
        DB_DATABASE: db_test
        DB_PORT: 33306
        DB_USERNAME: root
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      run: vendor/bin/phpunit

  code-style:
    runs-on: ubuntu-latest

    steps:
    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: ${{ env.PHP_VERSION }}

    - uses: actions/setup-node@v2.4.1
      with:
        node-version: ${{ env.NODE_VERSION }}
    - uses: mikeal/npx@1.0.0

    - uses: actions/checkout@v2

    - name: Install Dependencies
      run: |
        composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
        npm install

    - name: Code style (PhpCS)
      if: always()
      run:
        composer phpcs
